---
- hosts: "{{ passed_in_hosts }}" # change this
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: Install dependencies
      yum:
        name: "{{ package }} "
        state: present
      vars:
        package:
        - wget
        - java-1.8.0-openjdk-devel.x86_64
        - git

    # - name: Clone preconfigured Jenkins
    #   git:
    #     repo: https://github.com/linuxacademy/content-terraform-jenkins.git # change this
    #     dest: /tmp/jenkins

    - name: Setup Jenkins Repo
      get_url:
        url: https://pkg.jenkins.io/redhat/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins Repo GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat/jenkins.io.key


    - name: install update
      yum: 
        update_cache: yes

    - name: Install Jenkins
      yum:
        name: jenkins
        state: present

    - name: Temporarily Stop Jenkins
      service:
        name: jenkins
        state: stopped

    # - name: Modify user shell
    #   user:
    #     name: jenkins
    #     shell: /bin/bash

    # - name: Delete Jenkins default dir
    #   file:
    #     state: absent
    #     path: /var/lib/jenkins

    # - name: Copy over cloned Jenkins /var/lib/jenkins
    #   copy:
    #     remote_src: yes
    #     src: /tmp/jenkins/jenkins
    #     dest: /var/lib

    # - name: Restore jenkins user ownership on /var/lib/jenkins
    #   file:
    #     path: /var/lib/jenkins
    #     state: directory
    #     recurse: yes
    #     owner: jenkins

    - name: Install Docker
      shell: amazon-linux-extras install docker -y

    - name: Add ec2-user, jenkins to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop:
        - ec2-user
        - jenkins

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Start Jenkins
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Wait until Jenkins is up
      shell: result_first=1; while [[ $result_first != 0 ]]; do if [[ `grep 'Jenkins is fully up and running' /var/log/jenkins/jenkins.log` ]];then result_first=0;else sleep 4;fi;done
      register: result
      until: result.rc == 0
    
    - name: Get init pass
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: result

    - name: Print init pass
      debug:
        var: result